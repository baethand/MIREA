import importlib.util


def load_config(filename):
    spec = importlib.util.spec_from_file_location("config", filename)
    config = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(config)
    return config
#ПЛЮСЫ
#Безопасный способ загрузки конфигурации, так как используется стандартный механизм импорта Python
#Возможность использовать все преимущества модулей Python, такие как пространства имен, классы, функции
#МИНУСЫ
#Требует соблюдения правил именования файлов и структуры модулей Python
# Невозможность динамической генерации кода внутри конфигурационного файла



def load_config(filename):
    with open(filename, "r") as file:
        code = compile(file.read(), filename, "exec")
        config = {}
        exec(code, config)
    return config

#ПЛЮС
#Большая гибкость в написании конфигурационного файла, так как вы можете использовать
# любые конструкции Python, включая динамическую генерацию кода.
#МИНУСЫ
#Небезопасный способ загрузки конфигурации, так как выполняется произвольный код из файла. Это может привести к уязвимостям
# безопасности и другим проблемам.
#Отсутствие пространств имен, что может привести к конфликтам имен при загрузке нескольких конфигурационных файлов.